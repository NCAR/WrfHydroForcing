name: Run pytest

on:
  push:
    branches:
      - refactor  # Adjust the branch name as per your repository's default branch

jobs:
  pytest:
    runs-on: ubuntu-latest   # Use the desired operating system for the CI environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8  # Specify the desired Python version

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: defaults  # Specify the Conda channel you want to use
          python-version: 3.8  # Specify the Python version for the Conda environment

      - name: Initialize conda environment and activate in shell
        run: |
          conda init bash
          conda create -n esmpy_env
          eval "$(conda shell.bash hook)"
          conda activate esmpy_env
        shell: bash

      - name: Install mpich, ESMF and wgrib2
        run: |
          sudo apt-get install mpich

          mkdir $HOME/.esmf-src
          cd $HOME/.esmf-src
          wget https://github.com/esmf-org/esmf/archive/refs/tags/v8.5.0.tar.gz
          tar xfz v8.5.0.tar.gz
          ln -s esmf-8.5.0 esmf
          cd esmf
          export ESMF_DIR=$PWD
          export ESMF_COMM=mpich3
          make
          make install

          cd $HOME/.esmf-src/esmf/src/addon/esmpy
          make install

          cd $HOME
          wget https://www.ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2.tgz.v3.1.2
          tar xfz wgrib2.tgz.v3.1.2
          rm wgrib2.tgz.v3.1.2
          cd grib2
          export CC=gcc
          export FC=gfortran
          make
          make lib

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # If you have a requirements.txt file
          conda install -c conda-forge esmpy
          python setup.py install

      - name: Run pytest
        run: |
          cd core/tests
          pytest

      # Optional: Generate test coverage report
      - name: Install coverage tool
        run: pip install coverage

      - name: Run pytest with coverage
        run: coverage run -m pytest

      - name: Generate coverage report
        run: coverage html -i
